= PGroonga 2.3.4\n 新機能紹介

 : subtitle
    WALの自動適用と\nクラッシュセーフ機能
 : author
    堀本 泰弘
 : institution
    株式会社クリアコード
# : content-source
#    イベント名
 : date
    2021-12-24
 : allotted-time
    30m
 : start-time
    2021-12-24T16:05:00+09:00
 : end-time
    2021-12-24T16:35:00+09:00
 : theme
    .

= PGroonga 2.3.4 の新機能

下記の機能が新規追加

  * WALの自動適用
  * クラッシュセーフ

= WALの自動適用

* 該当する環境

  * ストリーミングレプリケーション構成
  * pgroonga.enable_wal が有効

= いままでの動作

いままでは、スタンバイサーバーで以下の操作が必要だった

* 定期的にPGroongaのWALを適用
* PGroongaのWALを適用後削除

= いままでの動作

  # image
  # src = images/WAL-increase.png
  # relative_height = 90

= 2.3.4 以降の動作

PGroonga 2.3.4 以降

* 定期的にPGroongaのWALを自動適用
* PGroongaのWALの最大サイズを制限

= WALの自動適用

* 定期的に pgroonga_wal_apply関数 を使って、PGroongaのWALを適用する

= WALの自動適用

  # image
  # src = images/WAL-auto-apply.png
  # relative_height = 80

= WALの自動適用\n設定

以下のパラメータを((*スタンバイサーバー*))に設定する

  # coderay sql

    shared_preload_libraries = 'pgroonga_wal_applier'

= WALの自動適用\n適用間隔の変更

以下のパラメータを((*スタンバイサーバー*))に設定することで可能

  # coderay sql

    pgroonga_wal_applier.naptime = internval

= WALの自動適用\n注意点

* 注意

  * 適用間隔を短くしすぎるとCPUリソースを多く使う
  * 適用後もWALは((*削除されない*))

= WALの最大サイズ制限

* WALは削除されないが((*最大サイズを制限できる*))

= WALの最大サイズ制限\n設定

以下のパラメータを((*プライマリーサーバー*))に設定する

  # coderay sql

    pgroonga.max_wal_size = size

= WALの最大サイズ制限

* 0を設定するとサイズ制限なし
* デフォルトは0でサイズ制限なし
* 最大サイズを超えた場合は、WALの先頭から上書きしていく

= WALの最大サイズ制限

  # image
  # src = images/WAL-max-size.png
  # relative_height = 100

= WALの最大サイズ制限\n注意点

* 注意

  * 最大サイズを超える前にWALが適用されてないと、WALが破損する
  * 設定したWALの適用間隔で蓄積されるWALサイズより十分に大きい数字を pgroonga.max_wal_size に指定する

= クラッシュセーフ機能

クラッシュ時にPGroongaのインデックスを((*自動*))で復旧

= いままでの動作

* PostgreSQLがクラッシュした時

  * PGroongaのインデックスを手動(REINDEX)で復旧

= クラッシュセーフ機能\n設定

以下のパラメータを((*プライマリーサーバー*))に設定する

  # coderay sql

    shared_preload_libraries = 'pgroonga_crash_safer'
    pgroonga.enable_crash_safe = on

= クラッシュセーフ機能

* データベースごとに必ず一つPostgreSQLのワーカープロセスを使う
* インデックスが更新されるごとにWALに変更を書き出す

= クラッシュセーフ機能

  # image
  # src = images/crash-safe-WAL-apply.png
  # relative_height = 90

= クラッシュセーフ機能

  # image
  # src = images/crash-safe-WAL-apply-shutdown.png
  # relative_height = 90

= クラッシュセーフ機能

* 起動時にWALが残っていたら正しくシャットダウンできていないと判断し自動で復旧

= クラッシュセーフ機能\n自動復旧

(1) PGroongaのWALから復旧\n
    -> 復旧に失敗したら、次のページの動作を行う

= クラッシュセーフ機能\n自動復旧

(1) 既存のGroongaのデータベースを削除
(2) Groongaのデータベースを新規作成
(3) REINDEX実行

= クラッシュセーフ機能\n設定

WALをストレージにフラッシュする間隔は以下のパラメータで変更

  # coderay sql

    pgroonga_crash_safer.flush_naptime = internval

= クラッシュセーフ機能\n注意点

* データベース毎に一つワーカープロセスを使うため、 max_worker_processes を増やす必要があるかもしれない

= クラッシュセーフ機能\n注意点

* インデックスを更新するたびWALを書き出すので、パフォーマンスが劣化する(書き込み性能が落ちる)
